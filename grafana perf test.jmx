<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="VerizonPerf" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="uname" elementType="Argument">
            <stringProp name="Argument.name">uname</stringProp>
            <stringProp name="Argument.value">${__P(uname,verizon)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="passwd" elementType="Argument">
            <stringProp name="Argument.name">passwd</stringProp>
            <stringProp name="Argument.value">${__P(passwd,ac0807ee4d7b0907dddbd089a2743ee69003)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">${__P(host,verizon.c01.eradb.dev)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">${__P(protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="post" elementType="Argument">
            <stringProp name="Argument.name">post</stringProp>
            <stringProp name="Argument.value">${__P(post,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expandedIndex" elementType="Argument">
            <stringProp name="Argument.name">expandedIndex</stringProp>
            <stringProp name="Argument.value">${__P(expandedIndex,benchmark)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_low" elementType="Argument">
            <stringProp name="Argument.name">ts_low</stringProp>
            <stringProp name="Argument.value">${__P(ts_low,1638399600000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high_01" elementType="Argument">
            <stringProp name="Argument.name">ts_high_01</stringProp>
            <stringProp name="Argument.value">${__P(ts_high,1638546819974)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high_02" elementType="Argument">
            <stringProp name="Argument.name">ts_high_02</stringProp>
            <stringProp name="Argument.value">${__javascript(${ts_low}*60000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="coloEdge" elementType="Argument">
            <stringProp name="Argument.name">coloEdge</stringProp>
            <stringProp name="Argument.value">SEA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high" elementType="Argument">
            <stringProp name="Argument.name">ts_high</stringProp>
            <stringProp name="Argument.value">1638489599000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="counter" elementType="Argument">
            <stringProp name="Argument.name">counter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="interval" elementType="Argument">
            <stringProp name="Argument.name">interval</stringProp>
            <stringProp name="Argument.value">${__P(interval,1h)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">10s,1m,10m,30m,1h,6h,12h,1d,7d,14d,30d</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="Verizon HTTP Authorization Manager" enabled="false">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://${host}</stringProp>
            <stringProp name="Authorization.username">verizon</stringProp>
            <stringProp name="Authorization.password">ac0807ee4d7b0907dddbd089a2743ee69003</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.controlledByThreadGroup">true</boolProp>
      </AuthManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="azurePerf" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="uname" elementType="Argument">
            <stringProp name="Argument.name">uname</stringProp>
            <stringProp name="Argument.value">${__P(uname,verizon)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="passwd" elementType="Argument">
            <stringProp name="Argument.name">passwd</stringProp>
            <stringProp name="Argument.value">${__P(passwd,ac0807ee4d7b0907dddbd089a2743ee69003)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">${__P(host,api.era.orkish.io)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">${__P(protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="post" elementType="Argument">
            <stringProp name="Argument.name">post</stringProp>
            <stringProp name="Argument.value">${__P(post,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expandedIndex" elementType="Argument">
            <stringProp name="Argument.name">expandedIndex</stringProp>
            <stringProp name="Argument.value">${__P(expandedIndex,benchmark)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_low" elementType="Argument">
            <stringProp name="Argument.name">ts_low</stringProp>
            <stringProp name="Argument.value">${__P(ts_low,1648042251000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high_01" elementType="Argument">
            <stringProp name="Argument.name">ts_high_01</stringProp>
            <stringProp name="Argument.value">${__P(ts_high,1647882000000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high_02" elementType="Argument">
            <stringProp name="Argument.name">ts_high_02</stringProp>
            <stringProp name="Argument.value">${__javascript(${ts_low}*60000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="coloEdge" elementType="Argument">
            <stringProp name="Argument.name">coloEdge</stringProp>
            <stringProp name="Argument.value">SEA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high" elementType="Argument">
            <stringProp name="Argument.name">ts_high</stringProp>
            <stringProp name="Argument.value">1648130451000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="counter" elementType="Argument">
            <stringProp name="Argument.name">counter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="interval" elementType="Argument">
            <stringProp name="Argument.name">interval</stringProp>
            <stringProp name="Argument.value">${__P(interval,1h)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">10s,1m,10m,30m,1h,6h,12h,1d,7d,14d,30d</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="AzureHTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://${host}</stringProp>
            <stringProp name="Authorization.username">customer-engineering</stringProp>
            <stringProp name="Authorization.password">d2047e4319b8d4b1670ec6f6a8f923df1143</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.controlledByThreadGroup">true</boolProp>
      </AuthManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Zsclaer" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="uname" elementType="Argument">
            <stringProp name="Argument.name">uname</stringProp>
            <stringProp name="Argument.value">${__P(uname,verizon)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="passwd" elementType="Argument">
            <stringProp name="Argument.name">passwd</stringProp>
            <stringProp name="Argument.value">${__P(passwd,ac0807ee4d7b0907dddbd089a2743ee69003)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">${__P(host,zscaler-1337.c03.eradb.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">${__P(protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="post" elementType="Argument">
            <stringProp name="Argument.name">post</stringProp>
            <stringProp name="Argument.value">${__P(post,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expandedIndex" elementType="Argument">
            <stringProp name="Argument.name">expandedIndex</stringProp>
            <stringProp name="Argument.value">${__P(expandedIndex,benchmark)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_low" elementType="Argument">
            <stringProp name="Argument.name">ts_low</stringProp>
            <stringProp name="Argument.value">${__P(ts_low,1638399600000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high_01" elementType="Argument">
            <stringProp name="Argument.name">ts_high_01</stringProp>
            <stringProp name="Argument.value">${__P(ts_high,1638546819974)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high_02" elementType="Argument">
            <stringProp name="Argument.name">ts_high_02</stringProp>
            <stringProp name="Argument.value">${__javascript(${ts_low}*60000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="coloEdge" elementType="Argument">
            <stringProp name="Argument.name">coloEdge</stringProp>
            <stringProp name="Argument.value">SEA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high" elementType="Argument">
            <stringProp name="Argument.name">ts_high</stringProp>
            <stringProp name="Argument.value">1638489599000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="counter" elementType="Argument">
            <stringProp name="Argument.name">counter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="interval" elementType="Argument">
            <stringProp name="Argument.name">interval</stringProp>
            <stringProp name="Argument.value">${__P(interval,6h)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">10s,1m,10m,30m,1h,6h,12h,1d,7d,14d,30d</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="Zscaler Authorization Manager" enabled="false">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://${host}</stringProp>
            <stringProp name="Authorization.username">zscaler</stringProp>
            <stringProp name="Authorization.password">1ce4e0229561be76f8372e1efaf417ca2319</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.controlledByThreadGroup">true</boolProp>
      </AuthManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Tim ENV org" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="uname" elementType="Argument">
            <stringProp name="Argument.name">uname</stringProp>
            <stringProp name="Argument.value">${__P(uname,tim)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="passwd" elementType="Argument">
            <stringProp name="Argument.name">passwd</stringProp>
            <stringProp name="Argument.value">${__P(passwd,iLoFNDYCXM6TKewMkC)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">${__P(host,tim.c01.eradb.dev)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">${__P(protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="post" elementType="Argument">
            <stringProp name="Argument.name">post</stringProp>
            <stringProp name="Argument.value">${__P(post,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expandedIndex" elementType="Argument">
            <stringProp name="Argument.name">expandedIndex</stringProp>
            <stringProp name="Argument.value">${__P(expandedIndex,benchmark)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_low" elementType="Argument">
            <stringProp name="Argument.name">ts_low</stringProp>
            <stringProp name="Argument.value">${__P(ts_low,1638399600000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high_01" elementType="Argument">
            <stringProp name="Argument.name">ts_high_01</stringProp>
            <stringProp name="Argument.value">${__P(ts_high,1638546819974)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high_02" elementType="Argument">
            <stringProp name="Argument.name">ts_high_02</stringProp>
            <stringProp name="Argument.value">${__javascript(${ts_low}*60000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="coloEdge" elementType="Argument">
            <stringProp name="Argument.name">coloEdge</stringProp>
            <stringProp name="Argument.value">SEA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high" elementType="Argument">
            <stringProp name="Argument.name">ts_high</stringProp>
            <stringProp name="Argument.value">1638489599000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="counter" elementType="Argument">
            <stringProp name="Argument.name">counter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="interval" elementType="Argument">
            <stringProp name="Argument.name">interval</stringProp>
            <stringProp name="Argument.value">${__P(interval,1d)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">10s,1m,10m,30m,1h,6h,12h,1d,7d,14d,30d</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="Tim-dev HTTP Authorization Manager" enabled="false">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://${host}</stringProp>
            <stringProp name="Authorization.username">tim</stringProp>
            <stringProp name="Authorization.password">iLoFNDYCXM6TKewMkC</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url"></stringProp>
            <stringProp name="Authorization.username"></stringProp>
            <stringProp name="Authorization.password"></stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.controlledByThreadGroup">true</boolProp>
      </AuthManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Tim ENV" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="uname" elementType="Argument">
            <stringProp name="Argument.name">uname</stringProp>
            <stringProp name="Argument.value">${__P(uname,tim)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="passwd" elementType="Argument">
            <stringProp name="Argument.name">passwd</stringProp>
            <stringProp name="Argument.value">${__P(passwd,iLoFNDYCXM6TKewMkC)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">${__P(host,tim.c01.eradb.dev)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">${__P(protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="post" elementType="Argument">
            <stringProp name="Argument.name">post</stringProp>
            <stringProp name="Argument.value">${__P(post,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expandedIndex" elementType="Argument">
            <stringProp name="Argument.name">expandedIndex</stringProp>
            <stringProp name="Argument.value">${__P(expandedIndex,benchmark)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_low" elementType="Argument">
            <stringProp name="Argument.name">ts_low</stringProp>
            <stringProp name="Argument.value">${__P(ts_low,1638486200000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high_01" elementType="Argument">
            <stringProp name="Argument.name">ts_high_01</stringProp>
            <stringProp name="Argument.value">${__P(ts_high,1638546819974)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high_02" elementType="Argument">
            <stringProp name="Argument.name">ts_high_02</stringProp>
            <stringProp name="Argument.value">${__javascript(${ts_low}*60000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="coloEdge" elementType="Argument">
            <stringProp name="Argument.name">coloEdge</stringProp>
            <stringProp name="Argument.value">SEA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ts_high" elementType="Argument">
            <stringProp name="Argument.name">ts_high</stringProp>
            <stringProp name="Argument.value">1638489599000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="counter" elementType="Argument">
            <stringProp name="Argument.name">counter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="interval" elementType="Argument">
            <stringProp name="Argument.name">interval</stringProp>
            <stringProp name="Argument.value">${__P(interval,1d)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">10s,1m,10m,30m,1h,6h,12h,1d,7d,14d,30d</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
        <boolProp name="displayJMeterProperties">false</boolProp>
        <boolProp name="displayJMeterVariables">true</boolProp>
        <boolProp name="displaySamplerProperties">true</boolProp>
        <boolProp name="displaySystemProperties">false</boolProp>
      </DebugPostProcessor>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthCheck / " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="false">
          <stringProp name="WhileController.condition">${__javaScript(parseInt(vars.get(&quot;counter&quot;))&lt;=5)}</stringProp>
        </WhileController>
        <hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end">61</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">String counter=vars.get(counter)
log.error(&quot;counter: &quot;+counter);

</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">String ts_high = props.get(&quot;ts_high&quot;);
String counter = vars.get(&quot;counter&quot;);

if (counter == null){
	String counter= props.get(&quot;counter&quot;);
}
if (counter != null &amp;&amp; ts_high !=null{
log.error(&quot;LOG: before inside counter Threads: &quot; + ts_high+&quot; &quot;+counter);
}

if (ts_high != null){
if (vars.get(&quot;ts_high&quot;) != props.get(&quot;ts_high&quot;)){
	log.error(&quot;LOG: before inside Grafana Threads: &quot;+props.get(&quot;ts_high&quot;) +&quot; &quot;+ vars.get(&quot;ts_high&quot;));
	vars.put(&quot;ts_high&quot;,props.get(&quot;ts_high&quot;));
	log.error(&quot;LOG: after inside Grafana Threads: &quot;+props.get(&quot;ts_high&quot;) +&quot; &quot;+ vars.get(&quot;ts_high&quot;));
}}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="jp@gc - Ultimate Thread Group" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="420680378">
            <stringProp name="50">2</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Log DNA data" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Log Counts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1637952695317,&quot;max&quot;:1638557495317},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1638012578085,&quot;max&quot;:1638617378085},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By Response" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;response&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1638013851193,&quot;max&quot;:1638618651193},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By method" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;verb&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1638013945772,&quot;max&quot;:1638618745772},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By version" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;httpversion&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1638014051940,&quot;max&quot;:1638618851940},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total bytes per endpoint" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1638014146616,&quot;max&quot;:1638618946617},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{&quot;1&quot;:{&quot;sum&quot;:{&quot;field&quot;:&quot;bytes&quot;}}}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Grafana" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">180</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10000000</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <stringProp name="TestPlan.comments">3000</stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">if (vars.get(&quot;ts_high&quot;) != props.get(&quot;ts_high&quot;)){
	log.error(&quot;LOG: before inside Grafana Threads: &quot;+props.get(&quot;ts_high&quot;) +&quot; &quot;+ vars.get(&quot;ts_high&quot;));
	vars.put(&quot;ts_high&quot;,props.get(&quot;ts_high&quot;));
	log.error(&quot;LOG: after inside Grafana Threads: &quot;+props.get(&quot;ts_high&quot;) +&quot; &quot;+ vars.get(&quot;ts_high&quot;));
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthCheck V1" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/healthcheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Log DNA data" enabled="false">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Log Counts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1637952695317,&quot;max&quot;:1638557495317},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total count" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;aggs&quot;: {&quot;date_histogram_over_1s&quot;: {&quot;date_histogram&quot;: {&quot;field&quot;: &quot;_ts&quot;, &quot;interval&quot;: &quot;${interval}&quot;}}}, &quot;size&quot;: 0}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1638012578085,&quot;max&quot;:1638617378085},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By Response" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;response&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1638013851193,&quot;max&quot;:1638618651193},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By method" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;verb&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1638013945772,&quot;max&quot;:1638618745772},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By version" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;httpversion&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1638014051940,&quot;max&quot;:1638618851940},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total bytes per endpoint" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1638014146616,&quot;max&quot;:1638618946617},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{&quot;1&quot;:{&quot;sum&quot;:{&quot;field&quot;:&quot;bytes&quot;}}}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Zscaler Data" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Log Counts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1637952695317,&quot;max&quot;:1638557495317},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total count" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;aggs&quot;: {&quot;date_histogram_over_1s&quot;: {&quot;date_histogram&quot;: {&quot;field&quot;: &quot;_ts&quot;, &quot;interval&quot;: &quot;${interval}&quot;}}}, &quot;size&quot;: 0}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By app" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;application&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By hostname" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;hostname&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By proxyip" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;proxyip&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By trafficredirectmethod" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;trafficredirectmethod&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Parallel Controller" enabled="false">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">true</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Count of Requests by country" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;2&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;ClientCountry&quot;,&quot;size&quot;:500,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;3&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:&quot;0&quot;,&quot;extended_bounds&quot;:{&quot;min&quot;:${ts_low},&quot;max&quot;:${ts_high}},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="status codes not 200&apos;s agg by status code and hostname" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;!EdgeResponseStatus:200&quot;}}]}},&quot;aggs&quot;:{&quot;2&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;EdgeResponseStatus&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:0},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;EdgeRequestHost&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:0},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Count of Status Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;2&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;EdgeResponseStatus&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:0},&quot;aggs&quot;:{}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Count by every 2 min" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;sort&quot;:[{&quot;_ts&quot;:{&quot;order&quot;:&quot;desc&quot;,&quot;unmapped_type&quot;:&quot;boolean&quot;}},{&quot;_doc&quot;:{&quot;order&quot;:&quot;desc&quot;}}],&quot;script_fields&quot;:{},&quot;aggs&quot;:{&quot;1&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:${ts_low},&quot;max&quot;:${ts_high}},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}},&quot;highlight&quot;:{&quot;fields&quot;:{&quot;*&quot;:{}},&quot;pre_tags&quot;:[&quot;@HIGHLIGHT@&quot;],&quot;post_tags&quot;:[&quot;@/HIGHLIGHT@&quot;],&quot;fragment_size&quot;:2147483647}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClientDeviceType over time" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;2&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;ClientDeviceType&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:0},&quot;aggs&quot;:{&quot;3&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:&quot;0&quot;,&quot;extended_bounds&quot;:{&quot;min&quot;:${ts_low},&quot;max&quot;:${ts_high}},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="jp@gc - Ultimate Thread Group" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="814388304">
            <stringProp name="1598">20</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1541058">2400</stringProp>
            <stringProp name="1567005">3000</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Log DNA data" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Log Counts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1637952695317,&quot;max&quot;:1638557495317},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total count" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;aggs&quot;: {&quot;date_histogram_over_1s&quot;: {&quot;date_histogram&quot;: {&quot;field&quot;: &quot;_ts&quot;, &quot;interval&quot;: &quot;${interval}&quot;}}}, &quot;size&quot;: 0}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By Response" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;response&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By method" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;verb&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By version" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;httpversion&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total bytes per endpoint" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{&quot;1&quot;:{&quot;sum&quot;:{&quot;field&quot;:&quot;bytes&quot;}}}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Grafana" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">180</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">1000000000</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <stringProp name="TestPlan.comments">3000</stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">if (vars.get(&quot;ts_high&quot;) != props.get(&quot;ts_high&quot;)){
	log.error(&quot;LOG: before inside Grafana Threads: &quot;+props.get(&quot;ts_high&quot;) +&quot; &quot;+ vars.get(&quot;ts_high&quot;));
	vars.put(&quot;ts_high&quot;,props.get(&quot;ts_high&quot;));
	log.error(&quot;LOG: after inside Grafana Threads: &quot;+props.get(&quot;ts_high&quot;) +&quot; &quot;+ vars.get(&quot;ts_high&quot;));
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthCheck V1" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/healthcheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Log DNA data" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Log Counts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1637952695317,&quot;max&quot;:1638557495317},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total count" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;aggs&quot;: {&quot;date_histogram_over_1s&quot;: {&quot;date_histogram&quot;: {&quot;field&quot;: &quot;_ts&quot;, &quot;interval&quot;: &quot;${interval}&quot;}}}, &quot;size&quot;: 0}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By Response" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;response&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By method" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;verb&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By version" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;httpversion&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total bytes per endpoint" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{&quot;1&quot;:{&quot;sum&quot;:{&quot;field&quot;:&quot;bytes&quot;}}}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Zscaler summary" enabled="false">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Log Counts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1637952695317,&quot;max&quot;:1638557495317},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total count" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;aggs&quot;: {&quot;date_histogram_over_1s&quot;: {&quot;date_histogram&quot;: {&quot;field&quot;: &quot;_ts&quot;, &quot;interval&quot;: &quot;${interval}&quot;}}}, &quot;size&quot;: 0}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="192.168.11[0-1].* count" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;regex&quot;: &quot;192.168.11[0-1].*&quot;,&#xd;
    &quot;namespace&quot;: &quot;benchmark&quot;,&#xd;
    &quot;field&quot;: &quot;serverip:s&quot;,&#xd;
    &quot;urls&quot;: [&quot;http://zscaler-12.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-47.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-39.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-43.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-48.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-32.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-28.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-42.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-45.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-23.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-40.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-6.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-44.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-34.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-2.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-7.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-18.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-26.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-19.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-22.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-25.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-37.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-27.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-36.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-33.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-24.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-15.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-1.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-21.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-20.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-0.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-46.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-49.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-41.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-8.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-14.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-38.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-13.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-16.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-31.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-17.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-30.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-5.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-35.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-10.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-4.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-3.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-11.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-9.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-29.zscaler-headless:1337&quot;]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/count</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="false">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="192.168.11[0-1].* when" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;regex&quot;: &quot;192.168.11[0-1].*&quot;,&#xd;
    &quot;namespace&quot;: &quot;benchmark&quot;,&#xd;
    &quot;field&quot;: &quot;serverip:s&quot;,&#xd;
    &quot;urls&quot;: [&quot;http://zscaler-12.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-47.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-39.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-43.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-48.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-32.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-28.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-42.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-45.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-23.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-40.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-6.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-44.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-34.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-2.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-7.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-18.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-26.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-19.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-22.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-25.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-37.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-27.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-36.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-33.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-24.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-15.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-1.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-21.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-20.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-0.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-46.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-49.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-41.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-8.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-14.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-38.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-13.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-16.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-31.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-17.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-30.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-5.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-35.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-10.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-4.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-3.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-11.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-9.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-29.zscaler-headless:1337&quot;]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/when</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="false">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="192.168.11[0-1].* search" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;regex&quot;: &quot;10.0.0.10.*&quot;,&#xd;
    &quot;namespace&quot;: &quot;benchmark&quot;,&#xd;
    &quot;field&quot;: &quot;proxyip:s&quot;,&#xd;
    &quot;urls&quot;: [&quot;http://zscaler-12.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-47.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-39.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-43.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-48.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-32.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-28.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-42.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-45.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-23.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-40.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-6.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-44.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-34.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-2.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-7.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-18.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-26.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-19.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-22.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-25.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-37.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-27.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-36.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-33.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-24.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-15.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-1.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-21.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-20.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-0.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-46.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-49.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-41.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-8.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-14.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-38.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-13.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-16.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-31.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-17.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-30.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-5.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-35.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-10.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-4.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-3.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-11.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-9.zscaler-headless:1337&quot;,&#xd;
             &quot;http://zscaler-29.zscaler-headless:1337&quot;]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="false">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By hostname" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;hostname&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By proxyip" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;proxyip&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By trafficredirectmethod" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;trafficredirectmethod&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Zscaler app" enabled="false">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Log Counts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1637952695317,&quot;max&quot;:1638557495317},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total count" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;: {&quot;date_histogram_over_1s&quot;: {&quot;date_histogram&quot;: {&quot;field&quot;: &quot;_ts&quot;, &quot;interval&quot;: &quot;${interval}&quot;}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By app" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;application&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By hostname" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;hostname&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By proxyip" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;proxyip&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By trafficredirectmethod" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;trafficredirectmethod&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Zscaler hostname" enabled="false">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Log Counts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1637952695317,&quot;max&quot;:1638557495317},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total count" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;: {&quot;date_histogram_over_1s&quot;: {&quot;date_histogram&quot;: {&quot;field&quot;: &quot;_ts&quot;, &quot;interval&quot;: &quot;${interval}&quot;}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By app" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;application&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By hostname" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;hostname&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By proxyip" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;proxyip&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By trafficredirectmethod" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;trafficredirectmethod&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Zscaler proxyIP" enabled="false">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Log Counts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1637952695317,&quot;max&quot;:1638557495317},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total count" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;: {&quot;date_histogram_over_1s&quot;: {&quot;date_histogram&quot;: {&quot;field&quot;: &quot;_ts&quot;, &quot;interval&quot;: &quot;${interval}&quot;}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By app" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;application&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By hostname" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;hostname&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By proxyip" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;proxyip&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By trafficredirectmethod" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;trafficredirectmethod&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Zscaler trafficredirectmethod" enabled="false">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Log Counts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;request&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:1637952695317,&quot;max&quot;:1638557495317},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="total count" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;: {&quot;date_histogram_over_1s&quot;: {&quot;date_histogram&quot;: {&quot;field&quot;: &quot;_ts&quot;, &quot;interval&quot;: &quot;${interval}&quot;}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.responses[*].status</stringProp>
              <stringProp name="EXPECTED_VALUE">[]</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By app" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;application&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By hostname" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;hostname&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By proxyip" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;proxyip&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="By trafficredirectmethod" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}}]}},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;trafficredirectmethod&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;2&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${expandedIndex}/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.aggregations</stringProp>
              <stringProp name="EXPECTED_VALUE">.*</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Parallel Controller" enabled="false">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">false</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">true</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Count of Requests by country" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;2&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;ClientCountry&quot;,&quot;size&quot;:500,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:1},&quot;aggs&quot;:{&quot;3&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:&quot;0&quot;,&quot;extended_bounds&quot;:{&quot;min&quot;:${ts_low},&quot;max&quot;:${ts_high}},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="status codes not 200&apos;s agg by status code and hostname" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;!EdgeResponseStatus:200&quot;}}]}},&quot;aggs&quot;:{&quot;2&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;EdgeResponseStatus&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:0},&quot;aggs&quot;:{&quot;3&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;EdgeRequestHost&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:0},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Count of Status Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;2&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;EdgeResponseStatus&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:0},&quot;aggs&quot;:{}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Count by every 2 min" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;sort&quot;:[{&quot;_ts&quot;:{&quot;order&quot;:&quot;desc&quot;,&quot;unmapped_type&quot;:&quot;boolean&quot;}},{&quot;_doc&quot;:{&quot;order&quot;:&quot;desc&quot;}}],&quot;script_fields&quot;:{},&quot;aggs&quot;:{&quot;1&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:0,&quot;extended_bounds&quot;:{&quot;min&quot;:${ts_low},&quot;max&quot;:${ts_high}},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}},&quot;highlight&quot;:{&quot;fields&quot;:{&quot;*&quot;:{}},&quot;pre_tags&quot;:[&quot;@HIGHLIGHT@&quot;],&quot;post_tags&quot;:[&quot;@/HIGHLIGHT@&quot;],&quot;fragment_size&quot;:2147483647}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClientDeviceType over time" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;search_type&quot;:&quot;query_then_fetch&quot;,&quot;ignore_unavailable&quot;:true,&quot;index&quot;:&quot;${expandedIndex}&quot;}&#xd;
{&quot;size&quot;:0,&quot;query&quot;:{&quot;bool&quot;:{&quot;filter&quot;:[{&quot;range&quot;:{&quot;_ts&quot;:{&quot;gte&quot;:${ts_low},&quot;lte&quot;:${ts_high},&quot;format&quot;:&quot;epoch_millis&quot;}}},{&quot;query_string&quot;:{&quot;analyze_wildcard&quot;:true,&quot;query&quot;:&quot;*&quot;}}]}},&quot;aggs&quot;:{&quot;2&quot;:{&quot;terms&quot;:{&quot;field&quot;:&quot;ClientDeviceType&quot;,&quot;size&quot;:10,&quot;order&quot;:{&quot;_key&quot;:&quot;desc&quot;},&quot;min_doc_count&quot;:0},&quot;aggs&quot;:{&quot;3&quot;:{&quot;date_histogram&quot;:{&quot;interval&quot;:&quot;${interval}&quot;,&quot;field&quot;:&quot;_ts&quot;,&quot;min_doc_count&quot;:&quot;0&quot;,&quot;extended_bounds&quot;:{&quot;min&quot;:${ts_low},&quot;max&quot;:${ts_high}},&quot;format&quot;:&quot;epoch_millis&quot;},&quot;aggs&quot;:{}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/_msearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">resultstree.err</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">summary.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">threads_over_time.csv</stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">response_over_time.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">transactions_per_sec.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.LatenciesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Latencies Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">response_latencies.csv</stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
